# ===================================
# REDIS CACHE CONFIGURATION
# ===================================
# Copy these lines to your .env file on the server

# Cache Configuration - Change from 'database' to 'redis'
CACHE_STORE=redis

# Redis Client - Use 'predis' (pure PHP) or 'phpredis' (C extension, faster)
REDIS_CLIENT=predis

# Redis Connection Settings
REDIS_HOST=127.0.0.1
REDIS_PASSWORD=null
REDIS_PORT=6379

# Redis Database Numbers (separate databases for different purposes)
REDIS_DB=0           # Default Redis database
REDIS_CACHE_DB=1     # Cache storage database

# Optional: Queue Configuration (for better performance)
QUEUE_CONNECTION=redis

# Optional: Session Configuration (for horizontal scaling)
# SESSION_DRIVER=redis

# ===================================
# EXPECTED PERFORMANCE IMPROVEMENTS
# ===================================
# Cache Read:       50-100ms → 5-10ms (10x faster)
# Dashboard Load:   500-800ms → 200-400ms (2x faster)
# Visitor Tracking: 200ms → 50ms (4x faster)
# Database Load:    -30% to -50% reduction

# ===================================
# SETUP CHECKLIST
# ===================================
# ✅ 1. Install Redis: sudo apt install redis-server
# ✅ 2. Install PHP Extension: sudo apt install php-redis
# ✅ 3. Install Predis: composer require predis/predis
# ✅ 4. Copy these settings to .env
# ✅ 5. Clear cache: php artisan config:clear
# ✅ 6. Test: redis-cli ping (should return PONG)

# ===================================
# TROUBLESHOOTING
# ===================================
# Error: "Connection refused"
#   → Check Redis: sudo systemctl status redis-server
#   → Start Redis: sudo systemctl start redis-server

# Error: "Class 'Redis' not found"
#   → Install PHP extension: sudo apt install php-redis
#   → Restart PHP-FPM: sudo systemctl restart php8.2-fpm

# Error: "Class 'Predis\Client' not found"
#   → Install Predis: composer require predis/predis

